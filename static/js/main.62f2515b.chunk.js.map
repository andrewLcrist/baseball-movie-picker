{"version":3,"sources":["serviceWorker.js","components/Firebase/context.js","components/Firebase/firebase.js","constants/routes.js","components/PasswordForget/index.js","components/SignOut/index.js","Actions/userActions.js","components/Navigation/index.js","components/SignIn/index.js","components/Home/index.js","components/PasswordChange/index.js","components/Account/index.js","components/Admin/index.js","components/MoviePoster/index.js","components/ActorCard/index.js","components/MovieDetail/index.js","components/Movies/index.js","Actions/movieDataActions.js","components/AddMovie/index.js","components/App/index.js","Reducers/rootReducer.js","Reducers/movieDataReducer.js","Reducers/adminReducer.js","Sagas/movieDataSaga.js","Sagas/adminSaga.js","Sagas/rootSaga.js","index.js"],"names":["Boolean","window","location","hostname","match","FirebaseContext","React","createContext","withFirebase","Component","props","react_default","a","createElement","Consumer","firebase","Object","assign","app","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","db","database","auth","doSignInWithEmailAndPassword","email","password","setPersistence","then","signInWithEmailAndPassword","catch","error","console","log","code","message","doSignOut","signOut","baseballMovies","ref","addMovieToDatabase","title","movie","child","set","currentUser","HOME","INITIAL_STATE","PasswordForgetFormBase","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onSubmit","event","state","doPasswordReset","setState","objectSpread","preventDefault","onChange","defineProperty","target","name","value","_this$state","isInvalid","type","placeholder","disabled","PasswordForgetLink","Link","to","PasswordForgetPage","PasswordForgetForm","SignOutButton","history","push","onClick","SignOutWrapper","compose","connect","dispatch","withRouter","NavigationAuth","className","ROUTES","SignOut","NavigationNonAuth","NavigationPage","admin","Navigation_NavigationAuth","Navigation_NavigationNonAuth","SignInFormBase","handleUserSignIn","username","passwordOne","passwordTwo","_this$state2","SignInForm","setUser","userEmail","SignInPage","PasswordForget_PasswordForgetLink","HomePage","id","YouTube","videoId","opts","playerVars","autoplay","loop","controls","rel","playsinline","modestbranding","iv_load_policy","width","PasswordChangeForm","doPasswordUpdate","Account","PasswordChange","AccountPage","AdminPage","MoviePoster","showModal","_this2","runtimeHours","Math","floor","runtime","runtimeHourLabel","runtimeMinutes","concat","movieTitle","replace","src","poster","releaseDate","split","MoviePosterPage","ActorCard","_ref","actor","profile_path","character","MovieDetail","director","filter","credits","crew","job","map","e","join","movieData","backdrop_path","overview","values","cast","components_ActorCard","href","movieIndex","keys","thing","toLowerCase","indexOf","MovieDetailPage","movies","MoviesPageComponent","componentDidMount","on","snapshot","setMovieData","val","movieModal","i","components_MoviePoster","key","poster_path","release_date","MoviesPage","AddMovie","handleMovieSearch","movieSearch","search","searchMovies","addMovieToDataBase","searchMovieResults","length","AddMoviePage","searchTitle","movieId","App","createBrowserHistory","store","persistor","integration_react","es","BrowserRouter","components_Navigation","Route","path","component","rootReducer","combineReducers","arguments","undefined","action","watchSearchMovies","watchAddMovieToDatabase","getMovieData","regenerator_default","wrap","_context","prev","next","takeLatest","stop","_marked","_context2","fetch","response","json","data","results","put","t0","_marked2","_context3","_marked3","trailers","releaseDates","updatedTitle","_context4","_marked4","watchHandleUserSignIn","adminSaga_marked","adminSaga_marked2","rootSaga","all","rootSaga_marked","sagaMiddleware","createSagaMiddleware","persistConfig","storage","storageSession","persistedReducer","persistReducer","createStore","composeWithDevTools","applyMiddleware","thunk","persistStore","run","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.62f2515b.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\n\nconst FirebaseContext = React.createContext(null);\n\nexport const withFirebase = Component => props => (\n  <FirebaseContext.Consumer>\n    {firebase => <Component {...props} firebase={firebase} />}\n  </FirebaseContext.Consumer>\n);\n\nexport default FirebaseContext;\n","import app from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/database';\n\nconst config = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n};\n\n\n  const firebase = app.initializeApp(config);\n\n  const db = firebase.database()\n  const auth = firebase.auth()\n\n\n  export const doSignInWithEmailAndPassword = (email, password) => {\n    auth.setPersistence('session')\n    .then(function() {\n      return auth.signInWithEmailAndPassword(email, password)\n    })\n    .catch(function(error) {\n      console.log('auth error', error);\n      var errorCode = error.code;\n      var errorMessage = error.message;\n  });}\n\n  export const doSignOut = () => auth.signOut();\n\n  export const doPasswordReset = email => auth.sendPasswordResetEmail(email);\n\n  export const doPasswordUpdate = password =>\n    auth.currentUser.updatePassword(password);\n\n  export const baseballMovies = () => db.ref('baseballMovies/');\n\n  export const doAuth = () => auth.onAuthStateChanged(user => {\n    if(user) {\n      console.log('dingus')\n    } else {\n      return 'No one signed in'\n    }\n  })\n\n  export const addMovieToDatabase = (title, movie) => {\n    db.ref('baseballMovies/').child(title).set({\n      movie\n    }, function(error) {\n    if (error) {\n      console.log('error', error);\n    } else {\n      console.log('success');\n    }\n  })\n  };\n\n  export const currentUser = () => auth.currentUser\n","export const SIGN_UP = '/signup';\nexport const SIGN_IN = '/signin';\nexport const HOME = '/home';\nexport const ACCOUNT = '/account';\nexport const ADMIN = '/admin';\nexport const SEEN_IT_SURVEY = '/seenItSurvey'\nexport const MOVIES = '/movies';\nexport const MOVIE = '/movie';\nexport const ADD_MOVIE = '/addMovie'\nexport const PASSWORD_FORGET = '/pw-forget';\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\n\nconst PasswordForgetPage = () => (\n  <div>\n    <h1>PasswordForget</h1>\n    <PasswordForgetForm />\n  </div>\n);\n\nconst INITIAL_STATE = {\n  email: '',\n  error: null,\n};\n\nclass PasswordForgetFormBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = event => {\n    const { email } = this.state;\n\n    this.props.firebase\n      .doPasswordReset(email)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  render() {\n    const { email, error } = this.state;\n\n    const isInvalid = email === '';\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <input\n          name=\"email\"\n          value={this.state.email}\n          onChange={this.onChange}\n          type=\"text\"\n          placeholder=\"Email Address\"\n        />\n        <button disabled={isInvalid} type=\"submit\">\n          Reset My Password\n        </button>\n\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nconst PasswordForgetLink = () => (\n  <p>\n    <Link to={ROUTES.PASSWORD_FORGET}>Forgot Password?</Link>\n  </p>\n);\n\nexport default PasswordForgetPage;\n\nconst PasswordForgetForm = withFirebase(PasswordForgetFormBase);\n\nexport { PasswordForgetForm, PasswordForgetLink };\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\nimport {doSignOut, baseballMovies} from '../Firebase/firebase';\nimport { connect } from 'react-redux';\nimport {removeUser} from '../../Actions/userActions'\n\nimport { PasswordForgetLink } from '../PasswordForget';\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\n\nclass SignOutButton extends Component {\n  constructor(props) {\n    super(props);\n    }\n\n  signOut = () => {\n    doSignOut()\n    this.props.signOut()\n    this.props.history.push('/')\n  }\n\n  render() {\n    return(\n      <button type=\"button\" onClick={this.signOut}>\n        Sign Out\n      </button>\n    )\n  }\n};\n\nconst mapStateToProps = state => ({\n});\n\nconst mapDispatchToProps = dispatch => ({\n  signOut: () => dispatch(removeUser())\n})\n\nconst SignOutWrapper = compose(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  ),\n  withRouter,\n  withFirebase,\n)(SignOutButton);\n\nexport default SignOutWrapper\n","export const setUser = (userEmail) => {\n  return {\n    type: 'SET_USER',\n    userEmail: userEmail\n  }\n}\n\nexport const removeUser = () => {\n  return {\n    type: 'REMOVE_USER'\n  }\n}\n\nexport const handleUserSignIn = (email, password) => {\n  return {\n    type: 'HANDLE_USER_SIGN_IN',\n    email: email,\n    password: password\n  }\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { compose } from 'recompose';\nimport { withFirebase } from '../Firebase';\nimport { withRouter } from 'react-router-dom';\n\nimport { currentUser, doAuth, baseballMovies} from '../Firebase/firebase';\n\nimport SignOutWrapper from '../SignOut';\nimport * as ROUTES from '../../constants/routes';\n\nconst Navigation = (props) => {\n  return(\n  <div>\n        {currentUser() ? <NavigationAuth /> : <NavigationNonAuth />}\n  </div>)\n};\n\nconst NavigationAuth = () => (\n  <ul className=\"header\">\n    <li>\n      <Link to={ROUTES.HOME}>Home</Link>\n    </li>\n    <li>\n      <Link to={ROUTES.ACCOUNT}>Account</Link>\n    </li>\n    <li>\n      <Link to={ROUTES.MOVIES}>Movies</Link>\n    </li>\n    <li>\n      <SignOutWrapper />\n    </li>\n  </ul>\n);\n\nconst NavigationNonAuth = () => (\n  <ul className=\"header\">\n    <li>\n      <Link to={ROUTES.HOME}>Home</Link>\n    </li>\n    <li>\n      <Link to={ROUTES.SIGN_IN}>Sign In</Link>\n    </li>\n  </ul>\n);\n\nconst mapStateToProps = state => ({\n  admin: state.admin\n});\n\nconst NavigationPage =  compose(\n  connect(\n    mapStateToProps\n  ),\n  withRouter,\n  withFirebase,\n)(Navigation);\n\nexport default NavigationPage;\n\nexport { Navigation };\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\nimport {setUser, handleUserSignIn} from '../../Actions/userActions'\nimport { connect } from 'react-redux';\n\nimport { PasswordForgetLink } from '../PasswordForget';\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\n\nconst SignInPage = () => (\n  <div>\n    <h1>SignIn</h1>\n    <SignInForm />\n    <PasswordForgetLink />\n  </div>\n);\n\nclass SignInFormBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      username: '',\n      email: '',\n      password: '',\n      passwordOne: '',\n      passwordTwo: '',\n      error: null,};\n    }\n\n  onSubmit = event => {\n    event.preventDefault();\n    const { email, password } = this.state;\n\n    this.props.handleUserSignIn(email, password)\n    this.setState({\n      username: '',\n      email: '',\n      passwordOne: '',\n      passwordTwo: '',\n      error: null,\n    })\n    this.props.history.push(ROUTES.HOME)\n  };\n\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  render() {\n    const { email, password, error } = this.state;\n\n    const isInvalid = password === '' || email === '';\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <input\n          name=\"email\"\n          value={email}\n          onChange={this.onChange}\n          type=\"text\"\n          placeholder=\"Email Address\"\n        />\n        <input\n          name=\"password\"\n          value={password}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"Password\"\n        />\n        <button disabled={isInvalid} type=\"submit\">\n          Take me out to the ball game\n        </button>\n\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n});\n\nconst mapDispatchToProps = dispatch => ({\n      setUser: (userEmail) => dispatch(setUser(userEmail)),\n      handleUserSignIn: (email, password) => dispatch(handleUserSignIn(email, password)),\n});\n\nconst SignInForm =  compose(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  ),\n  withRouter,\n  withFirebase,\n)(SignInFormBase);\n\nexport default SignInPage;\n\nexport { SignInForm };\n","import React from 'react';\nimport YouTube from 'react-youtube';\n\nconst HomePage = () => {\n\n  const opts = {\n  playerVars: {\n    autoplay: 0,\n    loop: 1,\n    controls: 1,\n    rel: 0,\n    playsinline: 0,\n    modestbranding: 1,\n    iv_load_policy: 3,\n    width: '100%'\n  }\n}\n  return (\n  <div id=\"homepage-container\">\n    <YouTube\n      id=\"montage\"\n      videoId={'ItYScNYRA5w'}\n      opts={opts}\n    />\n  </div>\n);\n}\n\nconst condition = authUser => !!authUser;\n\nexport default HomePage;\n","import React, { Component } from 'react';\n\nimport { withFirebase } from '../Firebase';\n\nconst INITIAL_STATE = {\n  passwordOne: '',\n  passwordTwo: '',\n  error: null,\n};\n\nclass PasswordChangeForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = event => {\n    const { passwordOne } = this.state;\n\n    this.props.firebase\n      .doPasswordUpdate(passwordOne)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  render() {\n    const { passwordOne, passwordTwo, error } = this.state;\n\n    const isInvalid =\n      passwordOne !== passwordTwo || passwordOne === '';\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <input\n          name=\"passwordOne\"\n          value={passwordOne}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"New Password\"\n        />\n        <input\n          name=\"passwordTwo\"\n          value={passwordTwo}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"Confirm New Password\"\n        />\n        <button disabled={isInvalid} type=\"submit\">\n          Reset My Password\n        </button>\n\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nexport default withFirebase(PasswordChangeForm);\n","import React, {Component} from 'react';\n\nimport { PasswordForgetForm } from '../PasswordForget';\nimport PasswordChangeForm from '../PasswordChange';\nimport { currentUser, doAuth, baseballMovies} from '../Firebase/firebase';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\nimport { connect } from 'react-redux';\n\nclass Account extends Component {\n\n  componentDidMount() {\n    !currentUser() && this.props.history.push(ROUTES.SIGN_IN)\n  }\n\n  render() {\n    return(\n      <div>\n      <h1>Account: </h1>\n      <PasswordForgetForm />\n      <PasswordChangeForm />\n      </div>\n    )\n  }\n};\n\nconst mapStateToProps = state => ({\n  admin: state.admin\n});\n\nconst mapDispatchToProps = dispatch => ({\n});\n\nconst AccountPage =  compose(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  ),\n  withRouter,\n  withFirebase,\n)(Account);\n\nexport default AccountPage;\n\nexport { Account };\n","import React from 'react';\n\n\nimport * as ROLES from '../../constants/roles';\n\nconst AdminPage = () => (\n  <div>\n    <h1>Admin</h1>\n    <p>\n      Restricted area! Only users with the admin role are authorized.\n    </p>\n  </div>\n);\n\nexport default AdminPage\n","import React, { Component } from 'react';\nimport * as ROUTES from '../../constants/routes';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\nimport { withFirebase } from '../Firebase';\n\nclass MoviePoster extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      showModal: false\n    }\n  }\n\n  render() {\n    const runtimeHours = Math.floor(this.props.runtime/60)\n    const runtimeHourLabel = runtimeHours > 1 ? 'hours' : 'hour'\n    const runtimeMinutes = this.props.runtime % 60\n\n    return (\n      <div className=\"movie-poster-container\">\n        <img\n          onClick={() => this.props.history.push(`${ROUTES.MOVIE}/${this.props.movieTitle.replace(/\\s/g, '')}`)}\n          className=\"movie-poster\"\n          src={`https://image.tmdb.org/t/p/w500/` + this.props.poster}\n        />\n        <div className=\"movie-poster-details-container\">\n        <p>{this.props.movieTitle}</p>\n        <p>{this.props.releaseDate.split('-')[0]}</p>\n        {this.props.runtime &&\n        <div>{runtimeHours} {runtimeHourLabel} {runtimeMinutes} minutes</div>\n        }\n        <p>Watch Trailer</p>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst MoviePosterPage =  compose(\n  withRouter,\n  withFirebase,\n)(MoviePoster);\n\nexport default MoviePosterPage;\n\nexport { MoviePoster };\n","import React, { Component } from 'react';\n\nconst ActorCard = ({actor}) => {\n\n  return(\n      <div className=\"actor-card-content\">\n        <div className=\"actor-card-profile-container\">\n          <img className=\"actor-card-profile\" src={`https://image.tmdb.org/t/p/w200/` + actor.profile_path} />\n        </div>\n        <div className=\"crew-text-container\">\n          <p className=\"actor-name\">{actor.name}</p>\n          <p>{actor.character}</p>\n        </div>\n      </div>\n    )\n    }\n\nexport default ActorCard;\n","import React, { Component } from 'react';\nimport { filter } from 'lodash';\nimport ActorCard from '../ActorCard'\nimport YouTube from 'react-youtube';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\nimport { withFirebase } from '../Firebase';\n\nclass MovieDetail extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      movie: {}\n    }\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    let movie = window.location.href.split('movie/')[1]\n    let movieIndex = Object.keys(props.baseballMovies).map(thing => thing.replace(/[^\\w\\s]/gi, '').toLowerCase() === movie.replace(/[^\\w\\s]/gi, '').toLowerCase()).indexOf(true)\n    if (Object.values(props.baseballMovies)[movieIndex] !== state.movie) {\n      return {\n        movie: Object.values(props.baseballMovies)[movieIndex].movie,\n      };\n    }\n\n    return null;\n  }\n\n  render() {\n    const director = filter(this.state.movie.credits.crew, { job: 'Director' }).map(e => e.name).join(', ');\n      const opts = {\n        playerVars: {\n          autoplay: 0,\n          loop: 1,\n          controls: 1,\n          rel: 0,\n          playsinline: 0,\n          modestbranding: 1,\n          iv_load_policy: 3,\n          width: '5rem'\n        }\n      }\n\n      const runtimeHours = Math.floor(this.state.movie.movieData.runtime/60)\n      const runtimeHourLabel = runtimeHours > 1 ? 'hours' : 'hour'\n      const runtimeMinutes = this.state.movie.runtime % 60\n\n    return(\n      <div className=\"movie-modal\">\n      <img className=\"movie-modal-image-header\" src={`https://image.tmdb.org/t/p/original` + this.state.movie.movieData.backdrop_path} />\n              <div className=\"movie-modal-content-container\">\n              <div className=\"movie-modal-header-container\">\n                <h1 className=\"movie-title\">{this.state.movie.movieData.title}</h1>\n                <div>{runtimeHours} {runtimeHourLabel} {runtimeMinutes} minutes</div>\n              </div>\n              <div className=\"movie-modal-top-container\">\n                <div className=\"movie-details-container\">\n                  <div>Overview: {this.state.movie.movieData.overview}</div>\n                  <div>Director: {director}</div>\n                </div>\n              </div>\n              <div className=\"actor-card-container\">\n              {Object.values(this.state.movie.credits.cast).map(actor => <ActorCard actor={actor}/>)}\n              </div>\n              </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  baseballMovies: state.movieData.movies\n});\n\nconst mapDispatchToProps = dispatch => ({\n});\n\nconst MovieDetailPage =  compose(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  ),\n  withRouter,\n  withFirebase,\n)(MovieDetail);\n\nexport default MovieDetailPage;\n\nexport { MovieDetail };\n","import React, {Component} from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\nimport { withFirebase } from '../Firebase';\nimport MoviePoster from '../MoviePoster'\nimport MovieDetail from '../MovieDetail'\nimport { connect } from 'react-redux';\nimport { currentUser, doAuth, baseballMovies} from '../Firebase/firebase';\nimport {setMovieData} from '../../Actions/movieDataActions'\nimport * as ROUTES from '../../constants/routes';\n\nclass MoviesPageComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      movies: [],\n      showModal: false,\n      movieModal: {}\n    }\n  }\n\n  componentDidMount = () => {\n    baseballMovies().on('value', snapshot => {\n      this.props.setMovieData(snapshot.val())\n    })\n  }\n\n  render() {\n    return(\n      <div className=\"movie-container\">\n      {this.props.baseballMovies && Object.values(this.props.baseballMovies).map((movie, i) =>\n        <MoviePoster\n          key={movie.movie.movieData.title + `-` + i}\n          poster={movie.movie.movieData.poster_path}\n          movieTitle={movie.movie.movieData.title}\n          releaseDate={movie.movie.movieData.release_date}\n          runtime={movie.movie.movieData.runtime}\n          />\n        )}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  baseballMovies: state.movieData.movies,\n  admin: state.admin\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setMovieData: (movies) => dispatch(setMovieData(movies))\n});\n\nconst MoviesPage =  compose(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  ),\n  withRouter,\n  withFirebase,\n)(MoviesPageComponent);\n\nexport default MoviesPage;\n\nexport { MoviesPageComponent };\n","export const getMovieData = {\n  type: \"GET_MOVIE_DATA\"\n};\n\nexport const setMovieData = (movies) => {\n  return {\n  type: \"SET_MOVIE_DATA\",\n  movies: movies\n  }\n};\n\nexport const searchMovies = (searchTitle) => {\n  return {\n  type: \"SEARCH_MOVIES\",\n  searchTitle: searchTitle\n  }\n};\n\nexport const setMoviesToState = (movies) => {\n  return {\n  type: \"SET_MOVIES_TO_STATE\",\n  movies: movies\n  }\n};\n\nexport const addMovieToDatabase = (movieId) => {\n  return {\n    type: \"ADD_MOVIE_TO_DATABASE\",\n    movieId: movieId\n  }\n};\n","import React, { Component } from 'react';\nimport * as ROUTES from '../../constants/routes';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\nimport { withFirebase } from '../Firebase';\nimport { connect } from 'react-redux';\nimport {searchMovies, addMovieToDatabase} from '../../Actions/movieDataActions'\nimport MoviePoster from '../MoviePoster'\n\nclass AddMovie extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      movieSearch: ''\n    }\n  }\n\n  handleMovieSearch = (e) => {\n    this.setState({movieSearch: e.target.value})\n  }\n\n  search = () => {\n    this.props.searchMovies(this.state.movieSearch)\n  }\n\n  addMovieToDataBase = (id) => {\n    this.props.addMovieToDataBase(id)\n  }\n\n  render() {\n    const runtimeHours = Math.floor(this.props.runtime/60)\n    const runtimeHourLabel = runtimeHours > 1 ? 'hours' : 'hour'\n    const runtimeMinutes = this.props.runtime % 60\n\n    return (\n      <div className=\"add-movie-container\">\n        <input value={this.state.movieSearch} type=\"text\" onChange={(e) => this.handleMovieSearch(e)}/>\n        <button onClick={this.search}>Search</button>\n        {this.props.searchMovieResults && this.props.searchMovieResults.length !== 0 && this.props.searchMovieResults.map((movie, i) =>\n          <div>\n              <MoviePoster\n              key={movie + `-` + i}\n              poster={movie.poster_path}\n              movieTitle={movie.title}\n              releaseDate={movie.release_date}\n              />\n              <button onClick={() => this.addMovieToDataBase(movie.id)}>Add Movie to Database</button>\n            </div>\n          )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  searchMovieResults: state.movieData.movieSearch\n});\n\nconst mapDispatchToProps = dispatch => ({\n  searchMovies: (movie) => dispatch(searchMovies(movie)),\n  addMovieToDataBase: (id) => dispatch(addMovieToDatabase(id))\n});\n\nconst AddMoviePage =  compose(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  ),\n  withRouter,\n  withFirebase,\n)(AddMovie);\n\nexport default AddMoviePage;\n\nexport { AddMovie };\n","import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { Provider } from 'react-redux'\nimport createBrowserHistory from \"history/createBrowserHistory\";\nimport { PersistGate } from 'redux-persist/integration/react'\n\nimport Navigation from '../Navigation';\nimport SignInPage from '../SignIn';\nimport PasswordForgetPage from '../PasswordForget';\nimport HomePage from '../Home';\nimport AccountPage from '../Account';\nimport AdminPage from '../Admin';\nimport MoviesPage from '../Movies';\nimport MovieDetail from '../MovieDetail';\nimport AddMovie from '../AddMovie';\n\nimport * as ROUTES from '../../constants/routes';\n\nconst history = createBrowserHistory()\n\nconst App = ({store, persistor}) => (\n  <PersistGate persistor={persistor}>\n  <Provider store={store}>\n      <Router>\n        <div id=\"app\">\n          <Navigation />\n\n          <hr />\n\n          <Route path={ROUTES.SIGN_IN} component={SignInPage} />\n\n          <Route\n            path={ROUTES.PASSWORD_FORGET}\n            component={PasswordForgetPage}\n          />\n          <Route path={ROUTES.HOME} component={HomePage} />\n          <Route path={ROUTES.MOVIES} component={MoviesPage} />\n          <Route path={ROUTES.ADD_MOVIE} component={AddMovie} />\n          <Route path={ROUTES.MOVIE} component={MovieDetail} />\n          <Route path={ROUTES.ACCOUNT} component={AccountPage} />\n          <Route path={ROUTES.ADMIN} component={AdminPage} />\n        </div>\n      </Router>\n  </Provider>\n  </PersistGate>\n);\n\nexport default App;\n","import { combineReducers } from 'redux';\nimport movieDataReducer from './movieDataReducer'\nimport adminReducer from './adminReducer'\n\nconst rootReducer = combineReducers({\n    movieData: movieDataReducer,\n    admin: adminReducer,\n});\n\nexport default rootReducer\n","export default function movieDataReducer(state = {}, action) {\n  switch (action.type) {\n    case 'SET_MOVIE_DATA':\n      return {\n        ...state,\n        movies: action.movies\n      }\n    case 'SET_MOVIES_TO_STATE':\n    return {\n      ...state,\n      movieSearch: action.movies\n    }\n    default:\n      return state\n  }\n}\n","import * as actions from '../Actions/types'\n\nexport default function adminReducer(state = {}, action) {\n  switch (action.type) {\n    case 'SET_USER':\n      return {\n        ...state,\n        userEmail: action.userEmail\n      }\n    case 'REMOVE_USER':\n      return {\n        ...state,\n        userEmail: ''\n      }\n    default:\n      return state\n  }\n}\n","import { takeLatest, call, put } from \"redux-saga/effects\";\nimport { addMovieToDatabase } from '../components/Firebase/firebase.js'\n\n// watcher saga: watches for actions dispatched to the store, starts worker saga\nexport function* watchSearchMovies() {\n  yield takeLatest(\"SEARCH_MOVIES\", searchMovies);\n}\n\n// worker saga: makes the api call when watcher saga sees the action\nexport function* searchMovies(action) {\n  try {\n    let movies\n    const updatedTitle = action.searchTitle.replace('', '+');\n      yield fetch(`https://api.themoviedb.org/3/search/movie?api_key=${process.env.REACT_APP_TMDB_API_KEY}&query=${action.searchTitle}`)\n      .then(response => response.json())\n      .then(data => movies = data.results);\n\n    // dispatch a success action to the store with the new dog\n    yield put({ type: \"SET_MOVIES_TO_STATE\", movies });\n\n  } catch (error) {\n    // dispatch a failure action to the store with the error\n    console.log('fail')\n  }\n}\n\n\nexport function* watchAddMovieToDatabase() {\n  yield takeLatest(\"ADD_MOVIE_TO_DATABASE\", getMovieData);\n}\n\n\nexport function* getMovieData(action) {\n  let movieData, credits, trailers, releaseDates, movie = {}\n  yield fetch(`https://api.themoviedb.org/3/movie/${action.movieId}?api_key=${process.env.REACT_APP_TMDB_API_KEY}&language=en-US`)\n    .then(response => response.json())\n    .then(data => movieData = data);\n\n  yield fetch(`https://api.themoviedb.org/3/movie/${action.movieId}/credits?api_key=${process.env.REACT_APP_TMDB_API_KEY}`)\n    .then(response => response.json())\n    .then(data => credits = data);\n\n    yield fetch(`https://api.themoviedb.org/3/movie/${action.movieId}/videos?api_key=${process.env.REACT_APP_TMDB_API_KEY}&language=en-US`)\n    .then(response => response.json())\n    .then(data => trailers = data);\n\n    yield fetch(`https://api.themoviedb.org/3/movie/${action.movieId}/release_dates?api_key=${process.env.REACT_APP_TMDB_API_KEY}&language=en-US`)\n      .then(response => response.json())\n      .then(data => releaseDates = data);\n\n    movie.movieData = movieData\n    movie.credits = credits\n    movie.trailers = trailers\n    movie.releaseDates = releaseDates\n    const updatedTitle = movieData.title.replace(/\\s/g, '')\n    console.log(updatedTitle);\n\n    yield addMovieToDatabase(updatedTitle, movie)\n}\n","import { takeLatest, call, put } from \"redux-saga/effects\";\nimport {doSignInWithEmailAndPassword, currentUser} from '../components/Firebase/firebase';\n\nexport function* watchHandleUserSignIn() {\n  yield takeLatest(\"HANDLE_USER_SIGN_IN\", handleUserSignIn);\n}\n\n\nexport function* handleUserSignIn(action) {\n  const user = doSignInWithEmailAndPassword(action.email, action.password)\n  console.log(currentUser());\n}\n","import { call, put, takeEvery, takeLatest, all } from 'redux-saga/effects'\nimport {searchMovies, watchSearchMovies, watchAddMovieToDatabase, getMovieData} from './movieDataSaga'\nimport {watchHandleUserSignIn, handleUserSignIn} from './adminSaga'\n\nexport default function* rootSaga() {\n  yield all([\n    watchSearchMovies(),\n    watchAddMovieToDatabase(),\n    watchHandleUserSignIn(),\n  ])\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { composeWithDevTools } from 'redux-devtools-extension/logOnlyInProduction';\n\nimport './reset.css'\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nimport App from './components/App';\nimport { persistStore, persistReducer } from 'redux-persist'\nimport storageSession from 'redux-persist/lib/storage/session';\n\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport createSagaMiddleware from 'redux-saga'\nimport thunk from 'redux-thunk';\nimport rootReducer from './Reducers/rootReducer';\nimport rootSaga from './Sagas/rootSaga'\nimport searchMovies from './Sagas/movieDataSaga'\n\nconst sagaMiddleware = createSagaMiddleware()\n\nconst persistConfig = {\n  key: 'root',\n  storage: storageSession,\n}\n\nconst persistedReducer = persistReducer (persistConfig, rootReducer)\n\nlet store = createStore(\n  persistedReducer,\n  composeWithDevTools(\n    applyMiddleware(sagaMiddleware),\n    applyMiddleware(thunk),\n  )\n)\nconst persistor = persistStore(store);\n\nsagaMiddleware.run(rootSaga)\n\nReactDOM.render(\n\n    <App store={store} persistor={persistor}/>,\n\n  document.getElementById('root'),\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}