{"version":3,"sources":["serviceWorker.js","components/Firebase/context.js","components/Firebase/firebase.js","constants/routes.js","components/PasswordForget/index.js","components/SignOut/index.js","Actions/userActions.js","components/Navigation/index.js","components/SignIn/index.js","components/Home/index.js","components/PasswordChange/index.js","components/Account/index.js","components/Admin/index.js","components/MoviePoster/index.js","components/ActorCard/index.js","components/MovieDetail/index.js","components/Movies/index.js","Actions/movieDataActions.js","components/App/index.js","Reducers/rootReducer.js","Reducers/movieDataReducer.js","Reducers/adminReducer.js","index.js"],"names":["Boolean","window","location","hostname","match","FirebaseContext","React","createContext","withFirebase","Component","props","react_default","a","createElement","Consumer","firebase","Object","assign","thing","app","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","db","database","auth","doSignInWithEmailAndPassword","email","password","signInWithEmailAndPassword","doSignOut","signOut","baseballMovies","ref","currentUser","SIGN_IN","HOME","INITIAL_STATE","error","PasswordForgetFormBase","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onSubmit","event","state","doPasswordReset","then","setState","objectSpread","catch","preventDefault","onChange","defineProperty","target","name","value","_this$state","isInvalid","type","placeholder","disabled","message","PasswordForgetLink","Link","to","PasswordForgetPage","PasswordForgetForm","SignOutButton","history","push","onClick","SignOutWrapper","compose","connect","dispatch","withRouter","NavigationAuth","className","ROUTES","SignOut","NavigationNonAuth","NavigationPage","admin","Navigation_NavigationAuth","Navigation_NavigationNonAuth","SignInFormBase","setUser","user","username","passwordOne","passwordTwo","_this$state2","SignInForm","userEmail","SignInPage","PasswordForget_PasswordForgetLink","HomePage","id","YouTube","videoId","opts","playerVars","autoplay","loop","controls","rel","playsinline","modestbranding","iv_load_policy","width","PasswordChangeForm","doPasswordUpdate","Account","PasswordChange","AccountPage","AdminPage","MoviePoster","showModal","_this2","concat","movieTitle","replace","src","poster","MoviePosterPage","ActorCard","_ref","actor","profile_path","character","MovieDetail","movie","director","filter","cast","crew","job","map","e","join","runtimeHours","Math","floor","runtime","runtimeHourLabel","runtimeMinutes","backdrop_path","title","overview","values","components_ActorCard","href","split","movieIndex","keys","toLowerCase","indexOf","MovieDetailPage","movieData","movies","MoviesPageComponent","componentDidMount","on","snapshot","setMovieData","val","movieModal","i","components_MoviePoster","key","poster_path","MoviesPage","App","createBrowserHistory","store","persistor","integration_react","es","BrowserRouter","components_Navigation","Route","path","component","rootReducer","combineReducers","arguments","length","undefined","action","console","log","payload","persistConfig","storage","storageSession","persistedReducer","persistReducer","createStore","composeWithDevTools","applyMiddleware","thunk","persistStore","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3fbcb303.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\n\nconst FirebaseContext = React.createContext(null);\n\nexport const withFirebase = Component => props => (\n  <FirebaseContext.Consumer>\n    {firebase => <Component {...props} firebase={firebase} />}\n  </FirebaseContext.Consumer>\n);\n\nexport default FirebaseContext;\n","import app from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/database';\n\nconst config = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n};\n\n\n  const thing = app.initializeApp(config);\n\n  const db = thing.database()\n  const auth = thing.auth()\n\n  export const doSignInWithEmailAndPassword = (email, password) =>\n    auth.signInWithEmailAndPassword(email, password);\n\n  export const doSignOut = () => auth.signOut();\n\n  export const doPasswordReset = email => auth.sendPasswordResetEmail(email);\n\n  export const doPasswordUpdate = password =>\n    auth.currentUser.updatePassword(password);\n\n  export const baseballMovies = () => db.ref('baseballMovies/');\n\n  export const doAuth = () => auth.onAuthStateChanged(user => {\n    if(user) {\n      console.log('dingus')\n    } else {\n      return 'No one signed in'\n    }\n  })\n\n  export const currentUser = () => auth.currentUser\n","export const SIGN_UP = '/signup';\nexport const SIGN_IN = '/signin';\nexport const HOME = '/home';\nexport const ACCOUNT = '/account';\nexport const ADMIN = '/admin';\nexport const SEEN_IT_SURVEY = '/seenItSurvey'\nexport const MOVIES = '/movies';\nexport const MOVIE = '/movie';\nexport const PASSWORD_FORGET = '/pw-forget';\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\n\nconst PasswordForgetPage = () => (\n  <div>\n    <h1>PasswordForget</h1>\n    <PasswordForgetForm />\n  </div>\n);\n\nconst INITIAL_STATE = {\n  email: '',\n  error: null,\n};\n\nclass PasswordForgetFormBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = event => {\n    const { email } = this.state;\n\n    this.props.firebase\n      .doPasswordReset(email)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  render() {\n    const { email, error } = this.state;\n\n    const isInvalid = email === '';\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <input\n          name=\"email\"\n          value={this.state.email}\n          onChange={this.onChange}\n          type=\"text\"\n          placeholder=\"Email Address\"\n        />\n        <button disabled={isInvalid} type=\"submit\">\n          Reset My Password\n        </button>\n\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nconst PasswordForgetLink = () => (\n  <p>\n    <Link to={ROUTES.PASSWORD_FORGET}>Forgot Password?</Link>\n  </p>\n);\n\nexport default PasswordForgetPage;\n\nconst PasswordForgetForm = withFirebase(PasswordForgetFormBase);\n\nexport { PasswordForgetForm, PasswordForgetLink };\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\nimport {doSignOut, baseballMovies} from '../Firebase/firebase';\nimport { connect } from 'react-redux';\nimport {removeUser} from '../../Actions/userActions'\n\nimport { PasswordForgetLink } from '../PasswordForget';\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\n\nclass SignOutButton extends Component {\n  constructor(props) {\n    super(props);\n    }\n\n  signOut = () => {\n    doSignOut()\n    this.props.signOut()\n    this.props.history.push('/')\n  }\n\n  render() {\n    return(\n      <button type=\"button\" onClick={this.signOut}>\n        Sign Out\n      </button>\n    )\n  }\n};\n\nconst mapStateToProps = state => ({\n});\n\nconst mapDispatchToProps = dispatch => ({\n  signOut: () => dispatch(removeUser())\n})\n\nconst SignOutWrapper = compose(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  ),\n  withRouter,\n  withFirebase,\n)(SignOutButton);\n\nexport default SignOutWrapper\n","export const setUser = (userEmail) => {\n  return {\n    type: 'SET_USER',\n    userEmail: userEmail\n  }\n}\n\nexport const removeUser = () => {\n  return {\n    type: 'REMOVE_USER'\n  }\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { compose } from 'recompose';\nimport { withFirebase } from '../Firebase';\nimport { withRouter } from 'react-router-dom';\n\nimport { currentUser, doAuth, baseballMovies} from '../Firebase/firebase';\n\nimport SignOutWrapper from '../SignOut';\nimport * as ROUTES from '../../constants/routes';\n\nconst Navigation = (props) => {\n  return(\n  <div>\n        {currentUser() ? <NavigationAuth /> : <NavigationNonAuth />}\n  </div>)\n};\n\nconst NavigationAuth = () => (\n  <ul className=\"header\">\n    <li>\n      <Link to={ROUTES.HOME}>Home</Link>\n    </li>\n    <li>\n      <Link to={ROUTES.ACCOUNT}>Account</Link>\n    </li>\n    <li>\n      <Link to={ROUTES.MOVIES}>Movies</Link>\n    </li>\n    <li>\n      <SignOutWrapper />\n    </li>\n  </ul>\n);\n\nconst NavigationNonAuth = () => (\n  <ul className=\"header\">\n    <li>\n      <Link to={ROUTES.HOME}>Home</Link>\n    </li>\n    <li>\n      <Link to={ROUTES.SIGN_IN}>Sign In</Link>\n    </li>\n  </ul>\n);\n\nconst mapStateToProps = state => ({\n  admin: state.admin\n});\n\nconst NavigationPage =  compose(\n  connect(\n    mapStateToProps\n  ),\n  withRouter,\n  withFirebase,\n)(Navigation);\n\nexport default NavigationPage;\n\nexport { Navigation };\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\nimport {doSignInWithEmailAndPassword} from '../Firebase/firebase';\nimport {setUser} from '../../Actions/userActions'\nimport { connect } from 'react-redux';\n\nimport { PasswordForgetLink } from '../PasswordForget';\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\n\nconst SignInPage = () => (\n  <div>\n    <h1>SignIn</h1>\n    <SignInForm />\n    <PasswordForgetLink />\n  </div>\n);\n\nclass SignInFormBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      username: '',\n      email: '',\n      password: '',\n      passwordOne: '',\n      passwordTwo: '',\n      error: null,};\n    }\n\n  onSubmit = event => {\n    const { email, password } = this.state;\n\n    doSignInWithEmailAndPassword(email, password)\n      .then(thing => this.props.setUser(thing.user.email))\n      .then(() => {\n        this.setState({\n          username: '',\n          email: '',\n          passwordOne: '',\n          passwordTwo: '',\n          error: null,\n        });\n        this.props.history.push(ROUTES.HOME);\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  render() {\n    const { email, password, error } = this.state;\n\n    const isInvalid = password === '' || email === '';\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <input\n          name=\"email\"\n          value={email}\n          onChange={this.onChange}\n          type=\"text\"\n          placeholder=\"Email Address\"\n        />\n        <input\n          name=\"password\"\n          value={password}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"Password\"\n        />\n        <button disabled={isInvalid} type=\"submit\">\n          Take me out to the ball game\n        </button>\n\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n});\n\nconst mapDispatchToProps = dispatch => ({\n      setUser: (userEmail) => dispatch(setUser(userEmail)),\n});\n\nconst SignInForm =  compose(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  ),\n  withRouter,\n  withFirebase,\n)(SignInFormBase);\n\nexport default SignInPage;\n\nexport { SignInForm };\n","import React from 'react';\nimport YouTube from 'react-youtube';\n\nconst HomePage = () => {\n\n  const opts = {\n  playerVars: {\n    autoplay: 0,\n    loop: 1,\n    controls: 1,\n    rel: 0,\n    playsinline: 0,\n    modestbranding: 1,\n    iv_load_policy: 3,\n    width: '100%'\n  }\n}\n  return (\n  <div id=\"homepage-container\">\n    <YouTube\n      id=\"montage\"\n      videoId={'ItYScNYRA5w'}\n      opts={opts}\n    />\n  </div>\n);\n}\n\nconst condition = authUser => !!authUser;\n\nexport default HomePage;\n","import React, { Component } from 'react';\n\nimport { withFirebase } from '../Firebase';\n\nconst INITIAL_STATE = {\n  passwordOne: '',\n  passwordTwo: '',\n  error: null,\n};\n\nclass PasswordChangeForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = event => {\n    const { passwordOne } = this.state;\n\n    this.props.firebase\n      .doPasswordUpdate(passwordOne)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  render() {\n    const { passwordOne, passwordTwo, error } = this.state;\n\n    const isInvalid =\n      passwordOne !== passwordTwo || passwordOne === '';\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <input\n          name=\"passwordOne\"\n          value={passwordOne}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"New Password\"\n        />\n        <input\n          name=\"passwordTwo\"\n          value={passwordTwo}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"Confirm New Password\"\n        />\n        <button disabled={isInvalid} type=\"submit\">\n          Reset My Password\n        </button>\n\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nexport default withFirebase(PasswordChangeForm);\n","import React, {Component} from 'react';\n\nimport { PasswordForgetForm } from '../PasswordForget';\nimport PasswordChangeForm from '../PasswordChange';\nimport { currentUser, doAuth, baseballMovies} from '../Firebase/firebase';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\nimport { connect } from 'react-redux';\n\nclass Account extends Component {\n\n  componentDidMount() {\n    !currentUser() && this.props.history.push(ROUTES.SIGN_IN)\n  }\n\n  render() {\n    return(\n      <div>\n      <h1>Account: </h1>\n      <PasswordForgetForm />\n      <PasswordChangeForm />\n      </div>\n    )\n  }\n};\n\nconst mapStateToProps = state => ({\n  admin: state.admin\n});\n\nconst mapDispatchToProps = dispatch => ({\n});\n\nconst AccountPage =  compose(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  ),\n  withRouter,\n  withFirebase,\n)(Account);\n\nexport default AccountPage;\n\nexport { Account };\n","import React from 'react';\n\n\nimport * as ROLES from '../../constants/roles';\n\nconst AdminPage = () => (\n  <div>\n    <h1>Admin</h1>\n    <p>\n      Restricted area! Only users with the admin role are authorized.\n    </p>\n  </div>\n);\n\nexport default AdminPage\n","import React, { Component } from 'react';\nimport * as ROUTES from '../../constants/routes';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\nimport { withFirebase } from '../Firebase';\n\nclass MoviePoster extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      showModal: false\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"movie-poster-container\">\n        <img\n          onClick={() => this.props.history.push(`${ROUTES.MOVIE}/${this.props.movieTitle.replace(/\\s/g, '')}`)}\n          className=\"movie-poster\"\n          src={`https://image.tmdb.org/t/p/w500/` + this.props.poster}\n        />\n      </div>\n    );\n  }\n}\n\nconst MoviePosterPage =  compose(\n  withRouter,\n  withFirebase,\n)(MoviePoster);\n\nexport default MoviePosterPage;\n\nexport { MoviePoster };\n","import React, { Component } from 'react';\n\nconst ActorCard = ({actor}) => {\n\n  return(\n      <div className=\"actor-card-content\">\n        <div className=\"actor-card-profile-container\">\n          <img className=\"actor-card-profile\" src={`https://image.tmdb.org/t/p/w200/` + actor.profile_path} />\n        </div>\n        <div className=\"crew-text-container\">\n          <p className=\"actor-name\">{actor.name}</p>\n          <p>{actor.character}</p>\n        </div>\n      </div>\n    )\n    }\n\nexport default ActorCard;\n","import React, { Component } from 'react';\nimport { filter } from 'lodash';\nimport ActorCard from '../ActorCard'\nimport YouTube from 'react-youtube';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\nimport { withFirebase } from '../Firebase';\n\nclass MovieDetail extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      movie: {}\n    }\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    let movie = window.location.href.split('movie/')[1]\n    let movieIndex = Object.keys(props.baseballMovies).map(thing => thing.replace(/[^\\w\\s]/gi, '').toLowerCase() === movie.replace(/[^\\w\\s]/gi, '').toLowerCase()).indexOf(true)\n    if (Object.values(props.baseballMovies)[movieIndex] !== state.movie) {\n      return {\n        movie: Object.values(props.baseballMovies)[movieIndex],\n      };\n    }\n\n    return null;\n  }\n\n  render() {\n    const director = filter(this.state.movie.cast.crew, { job: 'Director' }).map(e => e.name).join(', ');\n      const opts = {\n        playerVars: {\n          autoplay: 0,\n          loop: 1,\n          controls: 1,\n          rel: 0,\n          playsinline: 0,\n          modestbranding: 1,\n          iv_load_policy: 3,\n          width: '5rem'\n        }\n      }\n\n      const runtimeHours = Math.floor(this.state.movie.runtime/60)\n      const runtimeHourLabel = runtimeHours > 1 ? 'hours' : 'hour'\n      const runtimeMinutes = this.state.movie.runtime % 60\n\n    return(\n      <div className=\"movie-modal\">\n      <img className=\"movie-modal-image-header\" src={`https://image.tmdb.org/t/p/original` + this.state.movie.backdrop_path} />\n              <div className=\"movie-modal-content-container\">\n              <div className=\"movie-modal-header-container\">\n                <h1 className=\"movie-title\">{this.state.movie.title}</h1>\n                <div>{runtimeHours} {runtimeHourLabel} {runtimeMinutes} minutes</div>\n              </div>\n              <div className=\"movie-modal-top-container\">\n                <div className=\"movie-details-container\">\n                  <div>Overview: {this.state.movie.overview}</div>\n                  <div>Director: {director}</div>\n                </div>\n              </div>\n              <div className=\"actor-card-container\">\n              {Object.values(this.state.movie.cast.cast).map(actor => <ActorCard actor={actor}/>)}\n              </div>\n              </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  baseballMovies: state.movieData.movies\n});\n\nconst mapDispatchToProps = dispatch => ({\n});\n\nconst MovieDetailPage =  compose(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  ),\n  withRouter,\n  withFirebase,\n)(MovieDetail);\n\nexport default MovieDetailPage;\n\nexport { MovieDetail };\n","import React, {Component} from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\nimport { withFirebase } from '../Firebase';\nimport MoviePoster from '../MoviePoster'\nimport MovieDetail from '../MovieDetail'\nimport { connect } from 'react-redux';\nimport { currentUser, doAuth, baseballMovies} from '../Firebase/firebase';\nimport {setMovieData} from '../../Actions/movieDataActions'\nimport * as ROUTES from '../../constants/routes';\n\nclass MoviesPageComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      movies: [],\n      showModal: false,\n      movieModal: {}\n    }\n  }\n\n  componentDidMount = () => {\n    !currentUser() && this.props.history.push(ROUTES.SIGN_IN)\n    baseballMovies().on('value', snapshot => {\n      this.props.setMovieData(snapshot.val())\n    })\n  }\n\n  render() {\n    return(\n      <div className=\"movie-container\">\n        {this.props.baseballMovies && Object.values(this.props.baseballMovies).map((movie, i) => <MoviePoster key={movie + `-` + i} poster={movie.poster_path} movieTitle={movie.title}/>)}\n\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  baseballMovies: state.movieData.movies,\n  admin: state.admin\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setMovieData: (movies) => dispatch(setMovieData(movies))\n});\n\nconst MoviesPage =  compose(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  ),\n  withRouter,\n  withFirebase,\n)(MoviesPageComponent);\n\nexport default MoviesPage;\n\nexport { MoviesPageComponent };\n","export const getMovieData = {\n  type: \"GET_MOVIE_DATA\"\n};\n\nexport const setMovieData = (movies) => {\n  return {\n  type: \"SET_MOVIE_DATA\",\n  movies: movies\n}\n};\n","import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { Provider } from 'react-redux'\nimport createBrowserHistory from \"history/createBrowserHistory\";\nimport { PersistGate } from 'redux-persist/integration/react'\n\nimport Navigation from '../Navigation';\nimport SignInPage from '../SignIn';\nimport PasswordForgetPage from '../PasswordForget';\nimport HomePage from '../Home';\nimport AccountPage from '../Account';\nimport AdminPage from '../Admin';\nimport MoviesPage from '../Movies';\nimport MovieDetail from '../MovieDetail';\n\nimport * as ROUTES from '../../constants/routes';\n\nconst history = createBrowserHistory()\n\nconst App = ({store, persistor}) => (\n  <PersistGate persistor={persistor}>\n  <Provider store={store}>\n      <Router>\n        <div id=\"app\">\n          <Navigation />\n\n          <hr />\n\n          <Route path={ROUTES.SIGN_IN} component={SignInPage} />\n\n          <Route\n            path={ROUTES.PASSWORD_FORGET}\n            component={PasswordForgetPage}\n          />\n          <Route path={ROUTES.HOME} component={HomePage} />\n          <Route path={ROUTES.MOVIES} component={MoviesPage} />\n          <Route path={ROUTES.MOVIE} component={MovieDetail} />\n          <Route path={ROUTES.ACCOUNT} component={AccountPage} />\n          <Route path={ROUTES.ADMIN} component={AdminPage} />\n        </div>\n      </Router>\n  </Provider>\n  </PersistGate>\n);\n\nexport default App;\n","import { combineReducers } from 'redux';\nimport movieDataReducer from './movieDataReducer'\nimport adminReducer from './adminReducer'\n\nconst rootReducer = combineReducers({\n    movieData: movieDataReducer,\n    admin: adminReducer,\n});\n\nexport default rootReducer\n","export default function movieDataReducer(state = {}, action) {\n  console.log(action.payload);\n  switch (action.type) {\n    case 'SET_MOVIE_DATA':\n      return {\n        ...state,\n        movies: action.movies\n      }\n    default:\n      return state\n  }\n}\n","import * as actions from '../Actions/types'\n\nexport default function adminReducer(state = {}, action) {\n  switch (action.type) {\n    case 'SET_USER':\n      return {\n        ...state,\n        userEmail: action.userEmail\n      }\n    case 'REMOVE_USER':\n      return {\n        ...state,\n        userEmail: ''\n      }\n    default:\n      return state\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { composeWithDevTools } from 'redux-devtools-extension/logOnlyInProduction';\n\nimport './reset.css'\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nimport App from './components/App';\nimport { persistStore, persistReducer } from 'redux-persist'\nimport storageSession from 'redux-persist/lib/storage/session';\n\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './Reducers/rootReducer';\n\nconst persistConfig = {\n  key: 'root',\n  storage: storageSession,\n}\n\nconst persistedReducer = persistReducer (persistConfig, rootReducer)\n\nlet store = createStore(\n  persistedReducer,\n  composeWithDevTools(\n    applyMiddleware(thunk),\n  )\n)\n\nconst persistor = persistStore(store);\n\nReactDOM.render(\n\n    <App store={store} persistor={persistor}/>,\n\n  document.getElementById('root'),\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}